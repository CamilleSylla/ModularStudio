import gsap from "gsap";
import Head from "next/head";
import { useEffect, useRef } from "react";
import {ScrollTrigger} from "gsap/dist/ScrollTrigger";

import Banner from "../../../components/sections/showcase/templates/banner/Banner";
import Presentation from "../../../components/sections/showcase/templates/presentation/Presentation";
import ImgSeperator from "../../../components/sections/showcase/templates/img_seperator/ImgSeperator";
export default function Template () {

  const mainRef = useRef()

  const data = {
    template_name: "RentCar",
    template_owner_target: "Location de vÃ©hicule - Concessionnaire - Garagiste - Transporteur",
    template_banner_img : "https://images.unsplash.com/photo-1617708139268-2ea2b39496d9?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80",
    presentation : {
      title : "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
      creation: "Novembre 2021",
      goal : "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut sem lorem, molestie eget pellentesque quis, gravida eget mauris."
    },
    seperator : "https://images.unsplash.com/photo-1551522435-a13afa10f103?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80"
  }

  useEffect(() => {

    const nav = document.getElementsByTagName('nav')[0]
    nav.style.mixBlendMode = 'difference'
    const li = [...nav.getElementsByTagName('li')]
    console.log(li);
    li.forEach(el => {
      el.style.mixBlendMode = "difference"
      console.log(el.style);
    })
    gsap.registerPlugin(ScrollTrigger)

    const sections = gsap.utils.toArray("section");
    let maxWidth = 0;
    const getMaxWidth = () => {
      maxWidth = 0;
      sections.forEach((section) => {
        maxWidth += section.offsetWidth;
      });
    };
    getMaxWidth();
    ScrollTrigger.addEventListener("refreshInit", getMaxWidth);

    gsap.to(sections, {
  x: () => `-${maxWidth - window.innerWidth}`,
  ease: "none",
  scrollTrigger: {
    trigger: mainRef.current,
    pin: true,
    scrub: .6,
    end: () => `+=${maxWidth}`,
    invalidateOnRefresh: true
  }
});

  }, [])

  return (
    <div>
      <Head>
        <title>Modular Studio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
                                                                                            {/* Total width = 100+100+50+100*/}
      <main ref={mainRef} style={{scrollBehavior: "none",display: "flex",flexWrap: "nowrap",width: "350vw", overflowX: "hidden", overflowY: "hidden"}}>
        <Banner title={data.template_name} background={data.template_banner_img} label={data.template_owner_target}/>
        <Presentation presentation={data.presentation}/>
        <ImgSeperator img={data.seperator}/>
        <section>
          B
        </section>
        
      </main>
    </div>
  );
}